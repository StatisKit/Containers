#include "_stl.h"



namespace autowig
{

    void method_decorator_ef7dce5e2268547fabb5bf655fe058a7(class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & instance, ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  param_in_0, const ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  param_out) { instance.at(param_in_0) = param_out; }
    void method_decorator_94e70d1afbe654acb6ffb60829d084e9(class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & instance, const ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  param_out) { instance.front() = param_out; }
    void method_decorator_041189c9874b534a9acff0f5971a6e7e(class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > & instance, const ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  param_out) { instance.back() = param_out; }
}

#if defined(_MSC_VER)
    #if (_MSC_VER == 1900)
namespace boost
{
    template <> class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile * get_pointer<class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile >(class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const volatile *c) { return c; }
}
    #endif
#endif



void wrapper_c047f2c3135554ceb57f166fd404cfc8()
{

    std::string name_a5e4e9231d6351ccb0e06756b389f0af = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + ".std");
    boost::python::object module_a5e4e9231d6351ccb0e06756b389f0af(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(name_a5e4e9231d6351ccb0e06756b389f0af.c_str()))));
    boost::python::scope().attr("std") = module_a5e4e9231d6351ccb0e06756b389f0af;
    boost::python::scope scope_a5e4e9231d6351ccb0e06756b389f0af = module_a5e4e9231d6351ccb0e06756b389f0af;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_a7967f8e767754c5bb2a4a4052371685)(::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type , ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::value_type const &) = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::assign;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_c1f800ce071252f09449a5c04529e68d)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_84f98cd7a1a954a7b20c702ba31ee3af)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::max_size;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_d22351adf080548a8da6664cb7692cc3)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::capacity;
    bool  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_d21db8339ef15d679723d862cb136452)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::empty;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_c307a0ae856d579c9936274439d8aa1c)(::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type ) = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reserve;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_ef7dce5e2268547fabb5bf655fe058a7)(::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type ) = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::at;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::const_reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_6a7baa2cb5ec5b84b1164a172dc8285c)(::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type ) const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::at;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_94e70d1afbe654acb6ffb60829d084e9)() = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::front;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::const_reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_9a0380d47fb15fb5a10831a2d938f60d)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::front;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_041189c9874b534a9acff0f5971a6e7e)() = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::back;
    ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::const_reference  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_99d28d6c9117580e958bee01d4669e38)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::back;
    class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > * (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_f283bc258f9c5afd81d1ebc6da188cce)() = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::data;
    class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > const * (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_8bd6cae0a1195956b7bda20cc0758c10)() const = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::data;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_80e4bd9c547a58cd834181f28c51f096)(::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::value_type const &) = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::push_back;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_e0195fd91cbb544da94e2cc2802e9c3f)() = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::pop_back;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_b1c5806478da532b9e5b0ea18dccf50b)(class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > &) = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::swap;
    void  (::std::vector< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_43b2bb197eb45b98bed1a1bca3addafb)() = &::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::clear;
    boost::python::class_< class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >, autowig::Held< class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::Type > class_c047f2c3135554ceb57f166fd404cfc8("_Vector_c047f2c3135554ceb57f166fd404cfc8", "", boost::python::no_init);
    class_c047f2c3135554ceb57f166fd404cfc8.def(boost::python::init<  >(""));
    class_c047f2c3135554ceb57f166fd404cfc8.def(boost::python::init< class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const & >(""));
    class_c047f2c3135554ceb57f166fd404cfc8.def("assign", method_pointer_a7967f8e767754c5bb2a4a4052371685, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("__len__", method_pointer_c1f800ce071252f09449a5c04529e68d, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("max_size", method_pointer_84f98cd7a1a954a7b20c702ba31ee3af, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("capacity", method_pointer_d22351adf080548a8da6664cb7692cc3, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("empty", method_pointer_d21db8339ef15d679723d862cb136452, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("reserve", method_pointer_c307a0ae856d579c9936274439d8aa1c, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("at", method_pointer_ef7dce5e2268547fabb5bf655fe058a7, boost::python::return_internal_reference<>(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("at", autowig::method_decorator_ef7dce5e2268547fabb5bf655fe058a7);
    class_c047f2c3135554ceb57f166fd404cfc8.def("at", method_pointer_6a7baa2cb5ec5b84b1164a172dc8285c, boost::python::return_value_policy< boost::python::return_by_value >(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("front", method_pointer_94e70d1afbe654acb6ffb60829d084e9, boost::python::return_internal_reference<>(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("front", autowig::method_decorator_94e70d1afbe654acb6ffb60829d084e9);
    class_c047f2c3135554ceb57f166fd404cfc8.def("front", method_pointer_9a0380d47fb15fb5a10831a2d938f60d, boost::python::return_value_policy< boost::python::return_by_value >(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("back", method_pointer_041189c9874b534a9acff0f5971a6e7e, boost::python::return_internal_reference<>(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("back", autowig::method_decorator_041189c9874b534a9acff0f5971a6e7e);
    class_c047f2c3135554ceb57f166fd404cfc8.def("back", method_pointer_99d28d6c9117580e958bee01d4669e38, boost::python::return_value_policy< boost::python::return_by_value >(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("data", method_pointer_f283bc258f9c5afd81d1ebc6da188cce, boost::python::return_value_policy< boost::python::reference_existing_object >(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("data", method_pointer_8bd6cae0a1195956b7bda20cc0758c10, boost::python::return_value_policy< boost::python::reference_existing_object >(), "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("push_back", method_pointer_80e4bd9c547a58cd834181f28c51f096, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("pop_back", method_pointer_e0195fd91cbb544da94e2cc2802e9c3f, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("swap", method_pointer_b1c5806478da532b9e5b0ea18dccf50b, "");
    class_c047f2c3135554ceb57f166fd404cfc8.def("clear", method_pointer_43b2bb197eb45b98bed1a1bca3addafb, "");

    struct vector_c047f2c3135554ceb57f166fd404cfc8_from_python
    {
        vector_c047f2c3135554ceb57f166fd404cfc8_from_python()
        {
            boost::python::converter::registry::push_back(
                &convertible,
                &construct,
                boost::python::type_id< class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >());
        }

        static void* convertible(PyObject* obj_ptr)
        {
            void* res;
            if(PyObject_HasAttrString(obj_ptr, "__iter__"))
            { res = obj_ptr; } 
            else
            { res = nullptr; }
            return res;
        }

        static void construct(PyObject* obj_ptr, boost::python::converter::rvalue_from_python_stage1_data* data)
        {
            boost::python::handle<> obj_iter(PyObject_GetIter(obj_ptr));
            void* storage = ((boost::python::converter::rvalue_from_python_storage< class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >*)data)->storage.bytes;
            new (storage) class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >();
            data->convertible = storage;
            class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >& result = *((class ::std::vector< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >*)storage);
            unsigned int i = 0;
            for(;; i++)
            {
                boost::python::handle<> py_elem_hdl(boost::python::allow_null(PyIter_Next(obj_iter.get())));
                if(PyErr_Occurred())
                { boost::python::throw_error_already_set(); }
                if(!py_elem_hdl.get())
                { break; }
                boost::python::object py_elem_obj(py_elem_hdl);
                result.push_back(boost::python::extract< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >  >(py_elem_obj));
            }
        }
    };

    vector_c047f2c3135554ceb57f166fd404cfc8_from_python();
}