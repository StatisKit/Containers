#include "_stl.h"

bool  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_99cdbcab645a50b28399676b63e80d7b)()const= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::empty;
::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_a01f9cbc37bc577eb3ddfa1d19c7b679)()const= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size;
::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_79514055f91055ec9f57a757bffde3a2)()const= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::max_size;
::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_2523f5eb6eb853d8bbb114a8e6c2fe65)(::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::key_type const &)= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::erase;
void  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_d650d6e118685a07bf464cfa39f51cf2)()= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::clear;
::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::size_type  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_5f93ec62659e578cbbc4e4471518af8f)(::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::key_type const &)const= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::count;
void  (::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > >::*method_pointer_022aa9f8614a534d8f91318595dfcd83)(class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > const *, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > const *)= &::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >::insert;

namespace autowig {
}

void wrapper_6436891c9b6854f494789a812891cbe5(pybind11::module& module)
{

    struct function_group
    {
        static ::statiskit::stl::SetLessStringGenerator  function_c0110bd91a2652afb1e70ddc9d04414a(::statiskit::stl::SetLessString const & parameter_0)
        { return ::statiskit::stl::generator(parameter_0); }
        static bool  function_4ade380737de5d36a28e501db32f69eb(::statiskit::stl::SetLessString & parameter_0, class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > const & parameter_1)
        { return ::statiskit::stl::insert(parameter_0, parameter_1); }
    };
    pybind11::class_<class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > >, autowig::HolderType< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::Type > class_6436891c9b6854f494789a812891cbe5(module, "_Set_6436891c9b6854f494789a812891cbe5", "");
    class_6436891c9b6854f494789a812891cbe5.def(pybind11::init<  >());
    class_6436891c9b6854f494789a812891cbe5.def(pybind11::init< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const & >());
    class_6436891c9b6854f494789a812891cbe5.def("empty", method_pointer_99cdbcab645a50b28399676b63e80d7b, "");
    class_6436891c9b6854f494789a812891cbe5.def("__len__", method_pointer_a01f9cbc37bc577eb3ddfa1d19c7b679, "");
    class_6436891c9b6854f494789a812891cbe5.def("max_size", method_pointer_79514055f91055ec9f57a757bffde3a2, "");
    class_6436891c9b6854f494789a812891cbe5.def("erase", method_pointer_2523f5eb6eb853d8bbb114a8e6c2fe65, "");
    class_6436891c9b6854f494789a812891cbe5.def("clear", method_pointer_d650d6e118685a07bf464cfa39f51cf2, "");
    class_6436891c9b6854f494789a812891cbe5.def("count", method_pointer_5f93ec62659e578cbbc4e4471518af8f, "");
    class_6436891c9b6854f494789a812891cbe5.def("insert", method_pointer_022aa9f8614a534d8f91318595dfcd83, "");
    class_6436891c9b6854f494789a812891cbe5.def("__iter__", function_group::function_c0110bd91a2652afb1e70ddc9d04414a, "");
    class_6436891c9b6854f494789a812891cbe5.def("insert", function_group::function_4ade380737de5d36a28e501db32f69eb, "");

}