#include "_stl.h"


#if defined(_MSC_VER)
    #if (_MSC_VER == 1900)
namespace boost
{
    template <> class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > const volatile * get_pointer<class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > const volatile >(class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > const volatile *c) { return c; }
}
    #endif
#endif

namespace autowig
{
    void method_decorator_a7cb81625e2f579199aeaaecca69d69f(class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > & instance, class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > & param_out)     { instance.operator++() = param_out; }
}


void wrapper_745e4933f5b250d9bc5232fe864d0cf7()
{

    std::string name_fa414b05d29e5f4ea0b6d6cb5cf81b01 = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + ".statiskit");
    boost::python::object module_fa414b05d29e5f4ea0b6d6cb5cf81b01(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(name_fa414b05d29e5f4ea0b6d6cb5cf81b01.c_str()))));
    boost::python::scope().attr("statiskit") = module_fa414b05d29e5f4ea0b6d6cb5cf81b01;
    boost::python::scope scope_fa414b05d29e5f4ea0b6d6cb5cf81b01 = module_fa414b05d29e5f4ea0b6d6cb5cf81b01;
    std::string name_f1ab29faa1815285a06ca52391d1425f = boost::python::extract< std::string >(boost::python::scope().attr("__name__") + ".stl");
    boost::python::object module_f1ab29faa1815285a06ca52391d1425f(boost::python::handle<  >(boost::python::borrowed(PyImport_AddModule(name_f1ab29faa1815285a06ca52391d1425f.c_str()))));
    boost::python::scope().attr("stl") = module_f1ab29faa1815285a06ca52391d1425f;
    boost::python::scope scope_f1ab29faa1815285a06ca52391d1425f = module_f1ab29faa1815285a06ca52391d1425f;
    bool  (::statiskit::stl::Generator< ::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > > >::*method_pointer_30be644c9a6f5492bf552e9847dd709b)() const = &::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::is_valid;
    class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > & (::statiskit::stl::Generator< ::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > > >::*method_pointer_a7cb81625e2f579199aeaaecca69d69f)() = &::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::operator++;
    class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >  (::statiskit::stl::Generator< ::std::set< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > >, ::std::less< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > >, ::std::allocator< ::std::basic_string< char, ::std::char_traits< char >, ::std::allocator< char > > > > >::*method_pointer_10ecdbe4ae2053789496273580871f32)() const = &::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >::value;
    boost::python::class_< class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > >, autowig::Held< class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > >::Type > class_745e4933f5b250d9bc5232fe864d0cf7("_Generator_745e4933f5b250d9bc5232fe864d0cf7", "", boost::python::no_init);
    class_745e4933f5b250d9bc5232fe864d0cf7.def(boost::python::init< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > const & >(""));
    class_745e4933f5b250d9bc5232fe864d0cf7.def(boost::python::init< class ::statiskit::stl::Generator< class ::std::set< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > >, struct ::std::less< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > >, class ::std::allocator< class ::std::basic_string< char, struct ::std::char_traits< char >, class ::std::allocator< char > > > > > const & >(""));
    class_745e4933f5b250d9bc5232fe864d0cf7.def("is_valid", method_pointer_30be644c9a6f5492bf552e9847dd709b, "");
    class_745e4933f5b250d9bc5232fe864d0cf7.def("__next__", method_pointer_a7cb81625e2f579199aeaaecca69d69f, boost::python::return_internal_reference<>(), "");
    class_745e4933f5b250d9bc5232fe864d0cf7.def("__next__", autowig::method_decorator_a7cb81625e2f579199aeaaecca69d69f);
    class_745e4933f5b250d9bc5232fe864d0cf7.def("value", method_pointer_10ecdbe4ae2053789496273580871f32, "");

}